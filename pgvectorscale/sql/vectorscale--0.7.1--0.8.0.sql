/* <begin connected objects> */
/*
This file is auto generated by pgrx.

The ordering of items is not stable, it is driven by a dependency graph.
*/
/* </end connected objects> */

/* <begin connected objects> */
-- pgvectorscale/src/access_method/mod.rs:38
-- vectorscale::access_method::amhandler

    CREATE OR REPLACE FUNCTION diskann_amhandler(internal) RETURNS index_am_handler PARALLEL SAFE IMMUTABLE STRICT COST 0.0001 LANGUAGE c AS '$libdir/vectorscale-0.8.0', 'amhandler_wrapper';

    DO $$
    DECLARE
        c int;
    BEGIN
        SELECT count(*)
        INTO c
        FROM pg_catalog.pg_am a
        WHERE a.amname = 'diskann';

        IF c = 0 THEN
            CREATE ACCESS METHOD diskann TYPE INDEX HANDLER diskann_amhandler;
        END IF;
    END;
    $$;
/* </end connected objects> */

/* <begin connected objects> */
-- pgvectorscale/src/access_method/distance.rs:47
-- vectorscale::access_method::distance::distance_type_cosine
CREATE OR REPLACE FUNCTION "distance_type_cosine"() RETURNS smallint /* i16 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS '$libdir/vectorscale-0.8.0', 'distance_type_cosine_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- pgvectorscale/src/access_method/distance.rs:57
-- vectorscale::access_method::distance::distance_type_inner_product
CREATE OR REPLACE FUNCTION "distance_type_inner_product"() RETURNS smallint /* i16 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS '$libdir/vectorscale-0.8.0', 'distance_type_inner_product_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- pgvectorscale/src/access_method/distance.rs:52
-- vectorscale::access_method::distance::distance_type_l2
CREATE OR REPLACE FUNCTION "distance_type_l2"() RETURNS smallint /* i16 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS '$libdir/vectorscale-0.8.0', 'distance_type_l2_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- pgvectorscale/src/access_method/mod.rs:290
-- vectorscale::access_method::smallint_array_overlap
CREATE OR REPLACE FUNCTION "smallint_array_overlap"(
	"left" smallint[], /* pgrx::datum::array::Array<i16> */
	"right" smallint[] /* pgrx::datum::array::Array<i16> */
) RETURNS bool /* bool */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS '$libdir/vectorscale-0.8.0', 'smallint_array_overlap_wrapper';
/* </end connected objects> */
/* <begin connected objects> */
/*
This file is auto generated by pgrx.

The ordering of items is not stable, it is driven by a dependency graph.
*/
/* </end connected objects> */

/* <begin connected objects> */
-- src/access_method/mod.rs:29
-- vectorscale::access_method::amhandler

    CREATE OR REPLACE FUNCTION diskann_amhandler(internal) RETURNS index_am_handler PARALLEL SAFE IMMUTABLE STRICT COST 0.0001 LANGUAGE c AS '$libdir/vectorscale-0.5.0', 'amhandler_wrapper';

    DO $$
    DECLARE
        c int;
    BEGIN
        SELECT count(*)
        INTO c
        FROM pg_catalog.pg_am a
        WHERE a.amname = 'diskann';

        IF c = 0 THEN
            CREATE ACCESS METHOD diskann TYPE INDEX HANDLER diskann_amhandler;
        END IF;
    END;
    $$;
/* </end connected objects> */

/* <begin connected objects> */
-- src/access_method/distance.rs:21
-- vectorscale::access_method::distance::distance_type_cosine
CREATE  FUNCTION "distance_type_cosine"() RETURNS smallint /* i16 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS '$libdir/vectorscale-0.5.0', 'distance_type_cosine_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- src/access_method/distance.rs:26
-- vectorscale::access_method::distance::distance_type_l2
CREATE  FUNCTION "distance_type_l2"() RETURNS smallint /* i16 */
IMMUTABLE STRICT PARALLEL SAFE
LANGUAGE c /* Rust */
AS '$libdir/vectorscale-0.5.0', 'distance_type_l2_wrapper';
/* </end connected objects> */

/* <begin connected objects> */
-- src/access_method/mod.rs:92
-- requires:
--   amhandler
--   distance_type_cosine
--   distance_type_l2


DO $$
DECLARE
  c int;
BEGIN
    SELECT count(*)
    INTO c
    FROM pg_catalog.pg_opclass c
    WHERE c.opcname = 'vector_cosine_ops'
    AND c.opcmethod = (SELECT oid FROM pg_catalog.pg_am am  WHERE am.amname = 'diskann');

    IF c = 0 THEN
        CREATE OPERATOR CLASS vector_cosine_ops
        DEFAULT FOR TYPE vector USING diskann AS
	        OPERATOR 1 <=> (vector, vector) FOR ORDER BY float_ops,
            FUNCTION 1 distance_type_cosine();
    END IF;

    SELECT count(*)
    INTO c
    FROM pg_catalog.pg_opclass c
    WHERE c.opcname = 'vector_l2_ops'
    AND c.opcmethod = (SELECT oid FROM pg_catalog.pg_am am  WHERE am.amname = 'diskann');

    IF c = 0 THEN
        CREATE OPERATOR CLASS vector_l2_ops
        FOR TYPE vector USING diskann AS
            OPERATOR 1 <-> (vector, vector) FOR ORDER BY float_ops,
            FUNCTION 1 distance_type_l2();
    END IF;
END;
$$;
/* </end connected objects> */

